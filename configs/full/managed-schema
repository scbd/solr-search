<?xml version="1.0" encoding="UTF-8" ?>

<!--
   Absolutely minimal version of https://github.com/apache/lucene-solr/blob/releases/lucene-solr/8.1.0/solr/server/solr/configsets/_default/conf/managed-schema
   Read the original for all various field definitions
   See also: https://lucene.apache.org/solr/guide/7_0/documents-fields-and-schema-design.html
--> 

<schema name="minimal-config" version="1.6">

    <!--
      Field types define what indexing and searching behavior, both through implementation class
      and through default parameters (most of which can be overriden by the field definitions).
      For available implementation classes, see: https://lucene.apache.org/solr/guide/7_7/field-types-included-with-solr.html
      For explanations of parameters, see: https://lucene.apache.org/solr/guide/7_7/field-type-definitions-and-properties.html
      By default, all fields are indexed and stored. This can be overriden at type or field level.
    -->

    <!-- 
      The StrField type is not analyzed, but indexed/stored verbatim.
      It has docValues enabled to make sorting and faceting faster: https://lucene.apache.org/solr/guide/7_7/docvalues.html
     -->
    <fieldType name="string" class="solr.StrField" docValues="true" sortMissingLast="true" />

    <!-- 
      Date field with support for sorting (using docValues). 
      Indexed content must be in the correct format (995-12-31T23:59:59Z)
      If date format differes, use update request processor to do the parsing instead
    -->
    <fieldType name="pdate" class="solr.DatePointField" docValues="true"/>

    <!--
      See, by comparison: https://github.com/apache/lucene-solr/blob/releases/lucene-solr/8.1.0/solr/server/solr/configsets/_default/conf/managed-schema#L282
      No StopFilter as it is disabled by default anyway and is generally not useful in modern search.
      No Synonyms as they are not configured by default. Can be added it, when required.
      Map non-ASCII characters to something searchable. Primary use is to allow search with/without accents. See: https://lucene.apache.org/solr/guide/7_7/filter-descriptions.html#ascii-folding-filter
      Same analyser chain for both indexing and query. For more details, see: https://lucene.apache.org/solr/guide/7_7/understanding-analyzers-tokenizers-and-filters.html#understanding-analyzers-tokenizers-and-filters
      This is barely suitable for most Latin languages and will have real issue with non-whitespace languages, such as Chinese.
    -->
    <fieldType name="text_basic" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.StandardTokenizerFactory"/>
	      <filter class="solr.ASCIIFoldingFilterFactory" preserveOriginal="false"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- 
      English text field. 
      Modified version of https://github.com/apache/lucene-solr/blob/releases/lucene-solr/8.1.0/solr/server/solr/configsets/_default/conf/managed-schema#L331
      Supports query-time synonyms as well as protected (from stemming) words.
      Include ASCII folding, just in case
    -->
    <fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.EnglishPossessiveFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="lang/protwords_common.txt"/>
        <filter class="solr.EnglishMinimalStemFilterFactory"/>
	      <filter class="solr.ASCIIFoldingFilterFactory" preserveOriginal="false"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.SynonymGraphFilterFactory" synonyms="lang/synonyms_en.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.EnglishPossessiveFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="lang/protwords_common.txt"/>
        <filter class="solr.EnglishMinimalStemFilterFactory"/>
	      <filter class="solr.ASCIIFoldingFilterFactory" preserveOriginal="false"/>
      </analyzer>
    </fieldType>

    <!--
      French text field.
      Modified version of https://github.com/apache/lucene-solr/blob/releases/lucene-solr/8.1.0/solr/server/solr/configsets/_default/conf/managed-schema#L705
      No synonym support. Could be added, but would need to split into index/query definitions.
      Include ASCII folding.
    -->
    <fieldType name="text_fr" class="solr.TextField" positionIncrementGap="100">
      <analyzer> 
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <!-- removes l', etc -->
        <filter class="solr.ElisionFilterFactory" ignoreCase="true" articles="lang/contractions_fr.txt"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.FrenchMinimalStemFilterFactory"/>
	      <filter class="solr.ASCIIFoldingFilterFactory" preserveOriginal="false"/>
      </analyzer>
    </fieldType>

    <!--
     Spanish text field.
     Modified version of https://github.com/apache/lucene-solr/blob/releases/lucene-solr/8.1.0/solr/server/solr/configsets/_default/conf/managed-schema#L658
     No synonym. Yes ASCII folding.
    -->
    <fieldType name="text_es" class="solr.TextField" positionIncrementGap="100">
      <analyzer> 
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.SpanishLightStemFilterFactory"/>
	      <filter class="solr.ASCIIFoldingFilterFactory" preserveOriginal="false"/>
      </analyzer>
    </fieldType>

    <!--
     Arabic text field.
     Modified version of https://github.com/apache/lucene-solr/blob/releases/lucene-solr/8.1.0/solr/server/solr/configsets/_default/conf/managed-schema#L559
     No synonym. 
     No stopwords (may need them later). 
     No ASCII folding (would probably break things).
    -->
    <fieldType name="text_ar" class="solr.TextField" positionIncrementGap="100">
      <analyzer> 
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <!-- for any non-arabic -->
        <filter class="solr.LowerCaseFilterFactory"/>
        <!-- normalizes ï»¯ to ï»±, etc -->
        <filter class="solr.ArabicNormalizationFilterFactory"/>
        <filter class="solr.ArabicStemFilterFactory"/>
      </analyzer>
    </fieldType>

    <!--
     Chinese text field.
     Modified version of text_cjk: https://github.com/apache/lucene-solr/blob/releases/lucene-solr/8.1.0/solr/server/solr/configsets/_default/conf/managed-schema#L595
     There are other ways to deal with the complexity of Chinese: https://lucene.apache.org/solr/guide/7_7/language-analysis.html#traditional-chinese
    -->
    <fieldType name="text_zh" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <!-- normalize width before bigram, as e.g. half-width dakuten combine  -->
        <filter class="solr.CJKWidthFilterFactory"/>
        <!-- for any non-CJK -->
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.CJKBigramFilterFactory"/>
      </analyzer>
    </fieldType>

    <!--
     Russian text field.
     Modified version of https://github.com/apache/lucene-solr/blob/releases/lucene-solr/8.1.0/solr/server/solr/configsets/_default/conf/managed-schema#L959
     No synonym. 
     No stopwords (may need them later). 
    -->
    <fieldType name="text_ru" class="solr.TextField" positionIncrementGap="100">
      <analyzer> 
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RussianLightStemFilterFactory"/>
      </analyzer>
    </fieldType>

    <!--
      Individual field definitions. May overwrite parameters set in the fieldType definitions.
    -->

    <!-- Primary key field. Every document must have one and updates use this field to replace a document. -->
    <field name="id" type="string" required="true" />
    <uniqueKey>id</uniqueKey>

    <!-- Catch-all field for generic search. Indexed, but not stored, so never returned to the user. --> 
    <field name="_text_" type="text_basic" stored="false" multiValued="true" />

    <!-- 
       Any field that does not match more precise definitions will match this.
       Multivalued to allow both single- and multi-valued fields to index.
       Useful for rapid development, but should probably be disabled for production.
       Searchable when mentioned explicitly.
    -->
    <dynamicField name="*" type="text_basic" multiValued="true" />

    <dynamicField name="*_EN_txt" type="text_en" multiValued="true" /> 
    <dynamicField name="*_FR_txt" type="text_fr" multiValued="true" /> 
    <dynamicField name="*_ES_txt" type="text_es" multiValued="true" /> 
    <dynamicField name="*_AR_txt" type="text_ar" multiValued="true" /> 
    <dynamicField name="*_ZH_txt" type="text_zh" multiValued="true" /> 
    <dynamicField name="*_RU_txt" type="text_ru" multiValued="true" /> 

    <dynamicField name="*_dt" type="pdate" />

    <!--
      Single-valued basic string.
    -->
    <dynamicField name="*_s" type="string" />

    <!--
      Copy all fields (explicit and dynamic) to the _text_ field to allow searching of everything.
      Good for development, but it means all individual analysis chain definitions are ignored i
      (inly _text_'s definition is used). 
      Also, does not allow any sort of relevancy manipulation
    -->
    <copyField source="*" dest="_text_" />

</schema>
